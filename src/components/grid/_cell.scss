// pip - mark on a grid showing position of certain value
$cell-pip-max-size: $base-size * 0.9 !default;
$cell-pip-max-thickness: 2px !default;
$cell-pip-bg: $color-primary-dark !default;
$cell-label-offset: calc(100% + #{$base-size * 0.3}) !default;
$cell-label-font-size: $base-size * 0.9 !default;

@include element('grid-cell') {
  position: absolute;
  background: $cell-pip-bg;

  @include modifier('horizontal') {
    transform: translateX(-50%);

    &-level-1 {
      width: $cell-pip-max-thickness;
      height: $cell-pip-max-size;

      // move first pip inline with grid line
      &:first-child {
        transform: translateX(0px);
      }

      // move last pip inline with grid line
      &:last-child {
        transform: translateX(-$cell-pip-max-thickness);
      }
    }

    &-level-2 {
      width: ceil($cell-pip-max-thickness / 2);
      height: $cell-pip-max-size - $cell-pip-max-size / 3;
    }

    &-level-3 {
      width: ceil($cell-pip-max-thickness / 3);
      height: $cell-pip-max-size / 3;
    }
  }

  @include modifier('vertical') {
    &-level-1 {
      width: $cell-pip-max-size;
      height: $cell-pip-max-thickness;

      // move first pip inline with grid line
      &:first-child {
        transform: translateY(0px);
      }

      // move last pip inline with grid line
      &:last-child {
        transform: translateY($cell-pip-max-thickness);
      }
    }

    &-level-2 {
      width: $cell-pip-max-size - $cell-pip-max-size / 3;
      height: ceil($cell-pip-max-thickness / 2);
    }

    &-level-3 {
      width: $cell-pip-max-size / 3;
      height: ceil($cell-pip-max-thickness / 3);
    }
  }
}

@include element('grid-cell-label') {
  position: absolute;
  font-size: $cell-label-font-size;

  @include modifier('horizontal') {
    top: $cell-label-offset;
    transform: translateX(-50%);
  }

  @include modifier('vertical') {
    left: $cell-label-offset;
    transform: translateY(-50%);
  }
}
